// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestion_des_visiteurs;

#nullable disable

namespace gestion_des_visiteurs.Migrations
{
    [DbContext(typeof(gestion_des_visiteursDbContext))]
    partial class gestion_des_visiteursDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gestion_des_visiteurs.Models.Administrateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrateurs", (string)null);
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Demande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SuperviseurId")
                        .HasColumnType("int");

                    b.Property<int?>("VisiteurId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idSuperviseur")
                        .HasColumnType("int");

                    b.Property<int>("idVisiteur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SuperviseurId");

                    b.HasIndex("VisiteurId");

                    b.HasIndex("idSuperviseur");

                    b.HasIndex("idVisiteur");

                    b.ToTable("Demandes", (string)null);
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Superviseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("administrateurId")
                        .HasColumnType("int");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idAdministrateur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("administrateurId");

                    b.ToTable("Superviseurs", (string)null);
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Visite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("VisiteurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateVisite")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("duree")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("heureDebut")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("heureFin")
                        .HasColumnType("time");

                    b.Property<int>("idVisiteur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisiteurId");

                    b.ToTable("Visites", (string)null);
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Visiteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SuperviseurId")
                        .HasColumnType("int");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idSuperviseur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SuperviseurId");

                    b.ToTable("Visiteurs", (string)null);
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Demande", b =>
                {
                    b.HasOne("gestion_des_visiteurs.Models.Superviseur", null)
                        .WithMany("demandes")
                        .HasForeignKey("SuperviseurId");

                    b.HasOne("gestion_des_visiteurs.Models.Visiteur", null)
                        .WithMany("demandes")
                        .HasForeignKey("VisiteurId");

                    b.HasOne("gestion_des_visiteurs.Models.Superviseur", "Superviseur")
                        .WithMany()
                        .HasForeignKey("idSuperviseur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("gestion_des_visiteurs.Models.Visiteur", "Visiteur")
                        .WithMany()
                        .HasForeignKey("idVisiteur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Superviseur");

                    b.Navigation("Visiteur");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Superviseur", b =>
                {
                    b.HasOne("gestion_des_visiteurs.Models.Administrateur", "administrateur")
                        .WithMany("Superviseurs")
                        .HasForeignKey("administrateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("administrateur");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Visite", b =>
                {
                    b.HasOne("gestion_des_visiteurs.Models.Visiteur", "Visiteur")
                        .WithMany("visites")
                        .HasForeignKey("VisiteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visiteur");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Visiteur", b =>
                {
                    b.HasOne("gestion_des_visiteurs.Models.Superviseur", "Superviseur")
                        .WithMany("visiteurs")
                        .HasForeignKey("SuperviseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Superviseur");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Administrateur", b =>
                {
                    b.Navigation("Superviseurs");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Superviseur", b =>
                {
                    b.Navigation("demandes");

                    b.Navigation("visiteurs");
                });

            modelBuilder.Entity("gestion_des_visiteurs.Models.Visiteur", b =>
                {
                    b.Navigation("demandes");

                    b.Navigation("visites");
                });
#pragma warning restore 612, 618
        }
    }
}
